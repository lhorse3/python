系统：win10
  
    环境搭建
    安装Anaconda并将python添加入系统环境变量
    编辑使用IDE选择了PyCharm  Windows64位版本
    
print and input
    input("")   双引号内可填提示的字符串  
    获取的所有数据默认为字符类型 （python2中把输入当成代码  python3直接输入  python2中raw_input等于python3 input）
    print("")  打印一个后自动换行 不换行时 print("**",end="")  
    print后面用%变量名    例：print("age=%d"%age)    可以直接输入变量名 例： print(age)
    打印多个变量时  例：print("%s%d%d"%(a,b,c))

python变量特征
    python中每一个变量都储存了一个值
    在程序中可随时修改变量的值，而python将记录变量的最新值

变量的命名规则
    变量名只能包含字母、数字、下划线。而变量名只能用字母和下划线打头
    变量名可用下划线来分隔其中单词而不是空格
    python的关键字和函数名不可作为变量名
    命名时应尽量简洁且使用驼峰法进行命名
    
注释方法
    #开头为单行注释   
    多行注释   '''注释'''  或  """注释"""

dir()和help()
    dir() 函数不带参数时，返回当前范围内的变量、方法和定义的类型列表；
    带参数时，返回参数的属性、方法列表。如果参数包含方法__dir__()，该方法将被调用。如果参数不包含__dir__()，该方法将最大限度地收集参数信息。
    help() 函数用于查看函数或模块用途的详细说明，括号中为对象，返回值为对象帮助信息。
    
":"的作用
    1.语句末尾表示之后代码为一个代码块
    2.字典定义当中用于分开键和值
    3.列表中用于定义分片、步长
    
pep8
    pep8是Python的编码规范
    例：
    1.每级缩进用4个空格  括号中使用垂直隐式缩进或悬挂缩进  不使用Tap，更不能混合使用Tap和空格
    2.每行最大行宽不超过 79 个字符 无括号续行，可使用反斜杠 括号内续行不需要使用反斜杠
    3.导入的每个模块应该单独成行 导入顺序如下: 先标准库，再相关的第三方库，最后本地库
    4.单引号和双引号作用是一样的，但必须保证成对存在，不能夹杂使用
    5.括号里边避免空格 逗号冒号分号前避免空格 函数调用的左括号之前不能有空格 赋值等操作符前后不能因为对齐而添加多个空格
    ... ...

import的使用
    import是用来引入模块
    1.import XXX 或 from XXX import *           引入XXX模块
    2.from XXX import X   引入XXX中的X模块
    3.import XXX as X    引入XXX模块 并在代码中将XXX定义为X

python中数值类型
    1.int 整数类型
    2.float 浮点数类型
    3.bool 布尔值 1=True 0=False
    4.complex  复数型

python中运算符以及优先级
    1.算术运算符   +加 -减 *乘 /除  //取商  %取余  n**x n的x次幂
    2.逻辑运算符   and和  or或  not非
    3.成员运算符   in  如果在指定的序列中找到值返回 True，否则返回 False。
                  not in	如果在指定的序列中没有找到值返回 True，否则返回 False。
    4.身份运算符   is 是判断两个标识符是不是引用自一个对象
                  is not 是判断两个标识符是不是引用自不同对象
    5.位运算符     &	按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0	
                  |	按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。
                  ^	按位异或运算符：当两对应的二进位相异时，结果为1
                  ~	按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。
                  <<	左移动运算符：运算数的各二进位全部左移若干位，由 << 右边的数字指定了移动的位数，高位丢弃，低位补0。
                  >>	右移动运算符：把">>"左边的运算数的各二进位全部右移若干位，>> 右边的数字指定了移动的位数
    6.比较运算符   == 检查两个操作数的值是否相等，如果是则条件变为真。
                  != 检查两个操作数的值是否相等，如果值不相等，则条件变为真。
                  <> 检查两个操作数的值是否相等，如果值不相等，则条件变为真。
                  > 检查左操作数的值是否大于右操作数的值，如果是，则条件成立。
                  < 检查左操作数的值是否小于右操作数的值，如果是，则条件成立。
                  >= 检查左操作数的值是否大于或等于右操作数的值，如果是，则条件成立。
                  <= 检查左操作数的值是否小于或等于右操作数的值，如果是，则条件成立。
    7.赋值运算符   =	简单的赋值运算符	+=	加法赋值运算符	 -=	减法赋值运算符	 *=	乘法赋值运算符	 /=	除法赋值运算符	 %=	取模赋值运算符	**=	幂赋值运算符	//=	取整除赋值运算符
    
    运算优先级为   **	指数 (最高优先级)
                  ~ + -	按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)
                  * / % //	乘，除，取模和取整除
                  + -	加法减法
                  >> <<	右移，左移运算符
                  &	位 'AND'
                  ^ |	位运算符
                  <= < > >=	比较运算符
                  <> == !=	等于运算符
                  = %= /= //= -= += *= **=	赋值运算符
                  is is not	身份运算符
                  in not in	成员运算符
                  not and or	逻辑运算符
